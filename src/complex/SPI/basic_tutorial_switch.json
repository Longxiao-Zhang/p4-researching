{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["local_firewall_func_flow_id", 32, false],
        ["local_firewall_func_port", 32, false],
        ["local_firewall_func_flow_id_0", 32, false],
        ["local_firewall_func_port_0", 32, false],
        ["local_firewall_func_tmp", 1, false],
        ["local_firewall_func_tmp_0", 1, false],
        ["metadata_t.mark_drop", 1, false],
        ["_padding_2", 5, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["clone_spec", 32, false],
        ["instance_type", 32, false],
        ["drop", 1, false],
        ["recirculate_port", 16, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["lf_field_list", 32, false],
        ["mcast_grp", 16, false],
        ["resubmit_flag", 32, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["recirculate_flag", 32, false],
        ["parser_error", 32, false],
        ["_padding", 5, false]
      ]
    },
    {
      "name" : "packet_out_header_t",
      "id" : 2,
      "fields" : [
        ["egress_port", 9, false],
        ["_padding_0", 7, false]
      ]
    },
    {
      "name" : "packet_in_header_t",
      "id" : 3,
      "fields" : [
        ["ingress_port", 9, false],
        ["_padding_1", 7, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 4,
      "fields" : [
        ["dstAddr", 48, false],
        ["srcAddr", 48, false],
        ["etherType", 16, false]
      ]
    },
    {
      "name" : "ipv4_t",
      "id" : 5,
      "fields" : [
        ["version", 4, false],
        ["ihl", 4, false],
        ["dscp", 6, false],
        ["ecn", 2, false],
        ["totalLen", 16, false],
        ["identification", 16, false],
        ["flags", 3, false],
        ["fragOffset", 13, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdrChecksum", 16, false],
        ["srcAddr", 32, false],
        ["dstAddr", 32, false]
      ]
    },
    {
      "name" : "notify_v4_t",
      "id" : 6,
      "fields" : [
        ["malform_srcAddr", 32, false]
      ]
    },
    {
      "name" : "tcp_t",
      "id" : 7,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["seqNo", 32, false],
        ["ackNo", 32, false],
        ["dataOffset", 4, false],
        ["res", 4, false],
        ["flags", 8, false],
        ["window", 16, false],
        ["checksum", 16, false],
        ["urgentPtr", 16, false]
      ]
    },
    {
      "name" : "udp_t",
      "id" : 8,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["length_", 16, false],
        ["checksum", 16, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "packet_out",
      "id" : 2,
      "header_type" : "packet_out_header_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "packet_in",
      "id" : 3,
      "header_type" : "packet_in_header_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 4,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 5,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "notify",
      "id" : 6,
      "header_type" : "notify_v4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "tcp",
      "id" : 7,
      "header_type" : "tcp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "udp",
      "id" : 8,
      "header_type" : "udp_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [],
  "errors" : [
    ["NoError", 1],
    ["PacketTooShort", 2],
    ["NoMatch", 3],
    ["StackOutOfBounds", 4],
    ["HeaderTooShort", 5],
    ["ParserTimeout", 6]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x00ff",
              "mask" : null,
              "next_state" : "parse_packet_out"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : "parse_ethernet"
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ]
        },
        {
          "name" : "parse_packet_out",
          "id" : 1,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "packet_out"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "value" : "default",
              "mask" : null,
              "next_state" : "parse_ethernet"
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_ethernet",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ]
        },
        {
          "name" : "parse_ipv4",
          "id" : 3,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x02",
              "mask" : null,
              "next_state" : "parse_notify"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : "parse_l4"
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv4", "dscp"]
            }
          ]
        },
        {
          "name" : "parse_notify",
          "id" : 4,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "notify"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "value" : "default",
              "mask" : null,
              "next_state" : "parse_l4"
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_l4",
          "id" : 5,
          "parser_ops" : [],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x06",
              "mask" : null,
              "next_state" : "parse_tcp"
            },
            {
              "type" : "hexstr",
              "value" : "0x11",
              "mask" : null,
              "next_state" : "parse_udp"
            },
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ]
        },
        {
          "name" : "parse_tcp",
          "id" : 6,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "tcp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_udp",
          "id" : 7,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "udp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "value" : "default",
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "includes/parser.p4",
        "line" : 70,
        "column" : 8,
        "source_fragment" : "basic_tutor_switch_deparser"
      },
      "order" : ["packet_in", "ethernet", "ipv4", "tcp", "udp"]
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [],
  "register_arrays" : [
    {
      "name" : "basic_tutorial_ingress.local_firewall_func.local_firewall_state",
      "id" : 0,
      "source_info" : {
        "filename" : "includes/local_learning_firewall.p4",
        "line" : 16,
        "column" : 28,
        "source_fragment" : "local_firewall_state"
      },
      "size" : 1024,
      "bitwidth" : 32
    }
  ],
  "calculations" : [
    {
      "name" : "calc",
      "id" : 0,
      "algo" : "crc16",
      "input" : [
        {
          "type" : "field",
          "value" : ["notify", "malform_srcAddr"]
        }
      ]
    },
    {
      "name" : "calc_0",
      "id" : 1,
      "algo" : "crc16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        }
      ]
    },
    {
      "name" : "calc_1",
      "id" : 2,
      "algo" : "crc16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        }
      ]
    },
    {
      "name" : "calc_2",
      "id" : 3,
      "source_info" : {
        "filename" : "includes/checksums.p4",
        "line" : 20,
        "column" : 8,
        "source_fragment" : "update_checksum( ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "version"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ihl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dscp"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ecn"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "totalLen"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "identification"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "flags"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "fragOffset"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ttl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        }
      ]
    }
  ],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "drop",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "drop",
          "parameters" : [],
          "source_info" : {
            "filename" : "includes/actions.p4",
            "line" : 7,
            "column" : 4,
            "source_fragment" : "mark_to_drop()"
          }
        }
      ]
    },
    {
      "name" : "drop",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "drop",
          "parameters" : [],
          "source_info" : {
            "filename" : "includes/actions.p4",
            "line" : 7,
            "column" : 4,
            "source_fragment" : "mark_to_drop()"
          }
        }
      ]
    },
    {
      "name" : "NoAction",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "basic_tutorial_ingress.ipv4_forwarding.ipv4_forward",
      "id" : 4,
      "runtime_data" : [
        {
          "name" : "dstAddr",
          "bitwidth" : 48
        },
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "includes/ipv4_forward.p4",
            "line" : 14,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "srcAddr"]
            },
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "includes/ipv4_forward.p4",
            "line" : 15,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.srcAddr = hdr.ethernet.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "includes/ipv4_forward.p4",
            "line" : 16,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.dstAddr = dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ttl"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "ttl"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "includes/ipv4_forward.p4",
            "line" : 17,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.ttl = hdr.ipv4.ttl - 1"
          }
        }
      ]
    },
    {
      "name" : "basic_tutorial_ingress.firewall_func.process_firewall",
      "id" : 5,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "notify"
            }
          ],
          "source_info" : {
            "filename" : "includes/firewall.p4",
            "line" : 23,
            "column" : 8,
            "source_fragment" : "hdr.notify.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["notify", "malform_srcAddr"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "includes/firewall.p4",
            "line" : 24,
            "column" : 8,
            "source_fragment" : "hdr.notify.malform_srcAddr = hdr.ipv4.srcAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "dscp"]
            },
            {
              "type" : "hexstr",
              "value" : "0x02"
            }
          ],
          "source_info" : {
            "filename" : "includes/firewall.p4",
            "line" : 26,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.dscp = 2"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ttl"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "ttl"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "includes/firewall.p4",
            "line" : 27,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.ttl = hdr.ipv4.ttl - 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "includes/firewall.p4",
            "line" : 29,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.srcAddr = hdr.ipv4.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            },
            {
              "type" : "field",
              "value" : ["notify", "malform_srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "includes/firewall.p4",
            "line" : 30,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.dstAddr = hdr.notify.malform_srcAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "includes/firewall.p4",
            "line" : 32,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = standard_metadata.ingress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            },
            {
              "type" : "field",
              "value" : ["ethernet", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "includes/firewall.p4",
            "line" : 34,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.dstAddr = hdr.ethernet.srcAddr"
          }
        }
      ]
    },
    {
      "name" : "basic_tutorial_ingress.local_firewall_func.update_and_match",
      "id" : 6,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "local_firewall_func_flow_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "calculation",
              "value" : "calc"
            },
            {
              "type" : "hexstr",
              "value" : "0x000003ff"
            }
          ],
          "source_info" : {
            "filename" : "includes/local_learning_firewall.p4",
            "line" : 23,
            "column" : 8,
            "source_fragment" : "hash(flow_id, ..."
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "local_firewall_func_port"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.local_firewall_func.local_firewall_state"
            },
            {
              "type" : "field",
              "value" : ["scalars", "local_firewall_func_flow_id"]
            }
          ],
          "source_info" : {
            "filename" : "includes/local_learning_firewall.p4",
            "line" : 32,
            "column" : 8,
            "source_fragment" : "local_firewall_state.read(port, flow_id)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "local_firewall_func_port"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "includes/local_learning_firewall.p4",
            "line" : 34,
            "column" : 8,
            "source_fragment" : "port = 32w1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.local_firewall_func.local_firewall_state"
            },
            {
              "type" : "field",
              "value" : ["scalars", "local_firewall_func_flow_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            }
          ],
          "source_info" : {
            "filename" : "includes/local_learning_firewall.p4",
            "line" : 35,
            "column" : 8,
            "source_fragment" : "local_firewall_state.write(flow_id, port)"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "notify"
            }
          ],
          "source_info" : {
            "filename" : "includes/local_learning_firewall.p4",
            "line" : 37,
            "column" : 8,
            "source_fragment" : "hdr.notify.setInvalid()"
          }
        }
      ]
    },
    {
      "name" : "basic_tutorial_ingress.local_firewall_func.match",
      "id" : 7,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "local_firewall_func_flow_id_0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "calculation",
              "value" : "calc_0"
            },
            {
              "type" : "hexstr",
              "value" : "0x000003ff"
            }
          ],
          "source_info" : {
            "filename" : "includes/local_learning_firewall.p4",
            "line" : 46,
            "column" : 8,
            "source_fragment" : "hash(flow_id, ..."
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "local_firewall_func_port_0"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.local_firewall_func.local_firewall_state"
            },
            {
              "type" : "field",
              "value" : ["scalars", "local_firewall_func_flow_id_0"]
            }
          ],
          "source_info" : {
            "filename" : "includes/local_learning_firewall.p4",
            "line" : 54,
            "column" : 8,
            "source_fragment" : "local_firewall_state.read(port, flow_id)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "local_firewall_func_tmp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "local_firewall_func_tmp"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "local_firewall_func_port_0"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "includes/local_learning_firewall.p4",
            "line" : 56,
            "column" : 31,
            "source_fragment" : "port == 32w1 ? 1w1 : 1w0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "local_firewall_func_tmp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "local_firewall_func_tmp"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "local_firewall_func_port_0"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000001"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "includes/local_learning_firewall.p4",
            "line" : 56,
            "column" : 31,
            "source_fragment" : "port == 32w1 ? 1w1 : 1w0"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "local_firewall_func_flow_id_0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "calculation",
              "value" : "calc_1"
            },
            {
              "type" : "hexstr",
              "value" : "0x000003ff"
            }
          ],
          "source_info" : {
            "filename" : "includes/local_learning_firewall.p4",
            "line" : 59,
            "column" : 8,
            "source_fragment" : "hash(flow_id, ..."
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "local_firewall_func_port_0"]
            },
            {
              "type" : "register_array",
              "value" : "basic_tutorial_ingress.local_firewall_func.local_firewall_state"
            },
            {
              "type" : "field",
              "value" : ["scalars", "local_firewall_func_flow_id_0"]
            }
          ],
          "source_info" : {
            "filename" : "includes/local_learning_firewall.p4",
            "line" : 67,
            "column" : 8,
            "source_fragment" : "local_firewall_state.read(port, flow_id)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "local_firewall_func_tmp_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "local_firewall_func_tmp_0"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "local_firewall_func_port_0"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "includes/local_learning_firewall.p4",
            "line" : 69,
            "column" : 31,
            "source_fragment" : "port == 32w1 ? 1w1 : 1w0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "local_firewall_func_tmp_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "local_firewall_func_tmp_0"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "not",
                      "left" : null,
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "local_firewall_func_port_0"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000001"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "includes/local_learning_firewall.p4",
            "line" : 69,
            "column" : 31,
            "source_fragment" : "port == 32w1 ? 1w1 : 1w0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata_t.mark_drop"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "local_firewall_func_tmp_0"]
            }
          ],
          "source_info" : {
            "filename" : "includes/local_learning_firewall.p4",
            "line" : 69,
            "column" : 8,
            "source_fragment" : "metadata.mark_drop ="
          }
        }
      ]
    },
    {
      "name" : "act",
      "id" : 8,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "drop",
          "parameters" : [],
          "source_info" : {
            "filename" : "includes/local_learning_firewall.p4",
            "line" : 78,
            "column" : 12,
            "source_fragment" : "mark_to_drop()"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 20,
        "column" : 8,
        "source_fragment" : "basic_tutorial_ingress"
      },
      "init_table" : "node_2",
      "tables" : [
        {
          "name" : "basic_tutorial_ingress.ipv4_forwarding.ipv4_lpm",
          "id" : 0,
          "source_info" : {
            "filename" : "includes/ipv4_forward.p4",
            "line" : 20,
            "column" : 10,
            "source_fragment" : "ipv4_lpm"
          },
          "key" : [
            {
              "match_type" : "lpm",
              "name" : "hdr.ipv4.dstAddr",
              "target" : ["ipv4", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "lpm",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [4, 0, 2],
          "actions" : ["basic_tutorial_ingress.ipv4_forwarding.ipv4_forward", "drop", "NoAction"],
          "base_default_next" : "basic_tutorial_ingress.firewall_func.tb_firewall",
          "next_tables" : {
            "basic_tutorial_ingress.ipv4_forwarding.ipv4_forward" : "basic_tutorial_ingress.firewall_func.tb_firewall",
            "drop" : "basic_tutorial_ingress.firewall_func.tb_firewall",
            "NoAction" : "basic_tutorial_ingress.firewall_func.tb_firewall"
          },
          "default_entry" : {
            "action_id" : 2,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "basic_tutorial_ingress.firewall_func.tb_firewall",
          "id" : 1,
          "source_info" : {
            "filename" : "includes/firewall.p4",
            "line" : 37,
            "column" : 10,
            "source_fragment" : "tb_firewall"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.srcAddr",
              "target" : ["ipv4", "srcAddr"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [5, 1, 3],
          "actions" : ["basic_tutorial_ingress.firewall_func.process_firewall", "drop", "NoAction"],
          "base_default_next" : "node_5",
          "next_tables" : {
            "basic_tutorial_ingress.firewall_func.process_firewall" : "node_5",
            "drop" : "node_5",
            "NoAction" : "node_5"
          },
          "default_entry" : {
            "action_id" : 3,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_local_firewall_func_update_and_match",
          "id" : 2,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [6],
          "actions" : ["basic_tutorial_ingress.local_firewall_func.update_and_match"],
          "base_default_next" : "tbl_local_firewall_func_match",
          "next_tables" : {
            "basic_tutorial_ingress.local_firewall_func.update_and_match" : "tbl_local_firewall_func_match"
          },
          "default_entry" : {
            "action_id" : 6,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_local_firewall_func_match",
          "id" : 3,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [7],
          "actions" : ["basic_tutorial_ingress.local_firewall_func.match"],
          "base_default_next" : "node_8",
          "next_tables" : {
            "basic_tutorial_ingress.local_firewall_func.match" : "node_8"
          },
          "default_entry" : {
            "action_id" : 7,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act",
          "id" : 4,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [8],
          "actions" : ["act"],
          "base_default_next" : null,
          "next_tables" : {
            "act" : null
          },
          "default_entry" : {
            "action_id" : 8,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_2",
          "id" : 0,
          "source_info" : {
            "filename" : "includes/ipv4_forward.p4",
            "line" : 34,
            "column" : 11,
            "source_fragment" : "hdr.ipv4.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["ipv4", "$valid$"]
              }
            }
          },
          "true_next" : "basic_tutorial_ingress.ipv4_forwarding.ipv4_lpm",
          "false_next" : "basic_tutorial_ingress.firewall_func.tb_firewall"
        },
        {
          "name" : "node_5",
          "id" : 1,
          "source_info" : {
            "filename" : "includes/local_learning_firewall.p4",
            "line" : 73,
            "column" : 11,
            "source_fragment" : "hdr.notify.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["notify", "$valid$"]
              }
            }
          },
          "true_next" : "tbl_local_firewall_func_update_and_match",
          "false_next" : "tbl_local_firewall_func_match"
        },
        {
          "name" : "node_8",
          "id" : 2,
          "source_info" : {
            "filename" : "includes/local_learning_firewall.p4",
            "line" : 77,
            "column" : 11,
            "source_fragment" : "metadata.mark_drop == 1w1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "metadata_t.mark_drop"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_act"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "basic_tutorial_switch.p4",
        "line" : 42,
        "column" : 8,
        "source_fragment" : "basic_tutorial_egress"
      },
      "init_table" : null,
      "tables" : [],
      "action_profiles" : [],
      "conditionals" : []
    }
  ],
  "checksums" : [
    {
      "name" : "cksum",
      "id" : 0,
      "source_info" : {
        "filename" : "includes/checksums.p4",
        "line" : 20,
        "column" : 8,
        "source_fragment" : "update_checksum( ..."
      },
      "target" : ["ipv4", "hdrChecksum"],
      "type" : "generic",
      "calculation" : "calc_2",
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "d2b",
          "left" : null,
          "right" : {
            "type" : "field",
            "value" : ["ipv4", "$valid$"]
          }
        }
      }
    }
  ],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.lf_field_list",
      ["standard_metadata", "lf_field_list"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.resubmit_flag",
      ["standard_metadata", "resubmit_flag"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.recirculate_flag",
      ["standard_metadata", "recirculate_flag"]
    ]
  ],
  "program" : "basic_tutorial_switch.p4",
  "__meta__" : {
    "version" : [2, 18],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}